name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    
    env:
      DEPLOY_PATH: /home/ubuntu/app  # Adjust this path as needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Using latest stable version
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Deploy code to EC2
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}
          EXCLUDE: ".git*, .env, .pytest_cache, __pycache__, venv"
          SCRIPT_AFTER: |
            echo "Deployment completed"

      - name: Configure and restart application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update system packages
            sudo apt-get update -y
            sudo apt-get install -y python3-pip python3-venv git

            # Navigate to project directory
            cd ${{ secrets.TARGET_DIR }}

            # Set up Python virtual environment
            python3 -m venv venv
            source venv/bin/activate

            # Install dependencies
            pip install --upgrade pip
            pip install -r requirements.txt

            # Kill existing uvicorn process if running
            pkill -f "uvicorn main:app" || true

            # Start the application using systemd or supervisor (recommended)
            # For now, using nohup as a basic solution
            nohup uvicorn main:app --host 0.0.0.0 --port 8000 > app.log 2>&1 &

            # Wait a moment and check if the application is running
            sleep 5
            if pgrep -f "uvicorn main:app" > /dev/null
            then
                echo "Application successfully started"
            else
                echo "Failed to start application"
                exit 1
            fi

      # - name: Verify deployment
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST_DNS }}
      #     username: ${{ secrets.USERNAME }}
      #     key: ${{ secrets.EC2_SSH_KEY }}
      #     script: |
      #       # Check if service is running
      #       curl -f http://localhost:8000/health || exit 1